<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>第一篇题解——青铜莲花池</title>
    <link href="/2023/02/12/%E7%AC%AC%E4%B8%80%E7%AF%87%E9%A2%98%E8%A7%A3%E2%80%94%E2%80%94%E9%9D%92%E9%93%9C%E8%8E%B2%E8%8A%B1%E6%B1%A0/"/>
    <url>/2023/02/12/%E7%AC%AC%E4%B8%80%E7%AF%87%E9%A2%98%E8%A7%A3%E2%80%94%E2%80%94%E9%9D%92%E9%93%9C%E8%8E%B2%E8%8A%B1%E6%B1%A0/</url>
    
    <content type="html"><![CDATA[<p><del>应该是</del>一道经典的bfs广搜题</p><h1 id="青铜莲花池——题目"><a href="#青铜莲花池——题目" class="headerlink" title="青铜莲花池——题目"></a>青铜莲花池——题目</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>$Farmer John$ 建造了一个美丽的池塘，用于让他的牛们审美和锻炼。这个长方形的池子被分割成了$ M $行和$ N $列 $( 1 \leq M \leq 30 ; 1 \le N \le 30 )$ 正方形格子的 。某些格子上有惊人的坚固的莲花，还有一些岩石，其余的只是美丽，纯净，湛蓝的水。</p><p>贝茜正在练习芭蕾舞，她从一个莲花跳跃到另一个莲花，当前位于一个莲花。她希望在莲花上一个一个的跳，目标是另一个给定莲花。她能跳既不入水，也不到一个岩石上。</p><p>令门外汉惊讶的是，贝茜的每次的跳跃像国际象棋中的骑士一样：横向移动$M1 (1 \leq M1 \leq 30 )$，然后纵向移动$M2 (1 \leq M2 \leq 30 ; M1 \neq M2 )$ ，或纵向移动$M1$，然后横向移动$M2$。贝茜有时可能会有多达8个选择的跳跃。</p><p>给定池塘的布局和贝茜的跳跃格式，请确定贝茜从从她的出发位置，到最终目的地，最小的跳跃次数，贝茜在给出测试数据一定可以跳到目的地。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p><em>第 1 行：四个用空格隔开的整数: $M$，$N$，$M1$，$M2$。</em>第 2..$M + 1$ 行：第 $i + 1$ 行 有 $N$ 个整数，表示该位置的状态：$0$ 为水； $1$ 为莲花； $2$ 为岩石； $3$ 为贝茜开始的位置； $4$ 为贝茜要去的目标位置。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>*第 1 行：一个整数，从起始点到要去的位置，贝茜最小的跳跃次数。</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">4 </span><span class="hljs-number">5</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span><br><span class="hljs-symbol">1 </span><span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span><br><span class="hljs-symbol">3 </span><span class="hljs-number">0</span> <span class="hljs-number">2</span> <span class="hljs-number">0</span> <span class="hljs-number">4</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">2<br></code></pre></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><p><del>不难看出</del>这道题应该采用广度优先搜索（bfs），那就以bfs模板（也不完全是）为框架，将这道题不同之处用你<del>聪明</del>的大脑填入“框架”中。（<strong><em>By the way</em></strong>，不习惯于STL中的queue的，可以自己用数组和头尾指针来代替）</p><p>首先，根据题目，贝同学会有8个方向的跳跃，分别由$M1$和$M2$的不同位置及方向决定的。那我们就用最stupid的做法：</p><p><img src="1.png" alt="方向"></p><p>当然，防止RE的悲剧发生，我们要提前将这些坐标判断一下。</p><p><img src="2.png" alt="除杂"></p><p>先讲一下原理：因为这8个方向是一个整体，so我们可以在循环外q.pop()，来保证搜索的点一“一”对应。同时，这8个点层数就+1。为了方便，我们不妨在结构体中直接定义step来简化我们的程序。<del>你也不知道贝同学这8个点是不是都不会掉水里or撞石头上</del></p><p>防止可怜的贝同学迷路（程序死循环），我们需要慷慨地将她走过的<del>坑</del>路做一个记号。鉴于输入时是int格式，所以如果$a_{i,j}$==0，那我们先将其赋值为1，然后加入队列温暖的大家庭。</p><p>当然，在我们的bfs函数的开头，别忘设置队列的初始值哦。</p><p><img src="3.png" alt="输入"></p><p>这道题想明白了，你离bfs最<del>只因</del>基本思路的打通就不远了</p><h1 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h1><h2 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,m,m1,m2;<br><span class="hljs-type">int</span> a[<span class="hljs-number">35</span>][<span class="hljs-number">35</span>];<br><span class="hljs-type">int</span> x,y;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">point</span>&#123;<br><span class="hljs-type">int</span> xx,yy,step;<br>&#125;;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">bfs</span><span class="hljs-params">()</span></span>&#123;<br>point f1;<br>f1.step=<span class="hljs-number">0</span>;<br>f1.xx = x;<br>f1.yy = y;<br>queue&lt;point&gt; q;<br>q.<span class="hljs-built_in">push</span>(f1);<br><span class="hljs-keyword">while</span>(q.<span class="hljs-built_in">empty</span>()!=<span class="hljs-number">1</span>)&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">7</span>;i++)&#123;<br><span class="hljs-type">int</span> ix,iy;<br><span class="hljs-keyword">if</span>(i==<span class="hljs-number">0</span>)&#123;<br>ix = q.<span class="hljs-built_in">front</span>().xx+m1;<br>iy = q.<span class="hljs-built_in">front</span>().yy+m2;<br>&#125;<br><span class="hljs-keyword">if</span>(i==<span class="hljs-number">1</span>)&#123;<br>ix = q.<span class="hljs-built_in">front</span>().xx+m2;<br>iy = q.<span class="hljs-built_in">front</span>().yy+m1;<br>&#125;<br><span class="hljs-keyword">if</span>(i==<span class="hljs-number">2</span>)&#123;<br>ix = q.<span class="hljs-built_in">front</span>().xx+m2;<br>iy = q.<span class="hljs-built_in">front</span>().yy-m1;<br>&#125;<br><span class="hljs-keyword">if</span>(i==<span class="hljs-number">3</span>)&#123;<br>ix = q.<span class="hljs-built_in">front</span>().xx+m1;<br>iy = q.<span class="hljs-built_in">front</span>().yy-m2;<br>&#125;<br><span class="hljs-keyword">if</span>(i==<span class="hljs-number">4</span>)&#123;<br>ix = q.<span class="hljs-built_in">front</span>().xx-m1;<br>iy = q.<span class="hljs-built_in">front</span>().yy-m2;<br>&#125;<br><span class="hljs-keyword">if</span>(i==<span class="hljs-number">5</span>)&#123;<br>ix = q.<span class="hljs-built_in">front</span>().xx-m1;<br>iy = q.<span class="hljs-built_in">front</span>().yy+m2;<br>&#125;<br><span class="hljs-keyword">if</span>(i==<span class="hljs-number">6</span>)&#123;<br>ix = q.<span class="hljs-built_in">front</span>().xx-m2;<br>iy = q.<span class="hljs-built_in">front</span>().yy+m1;<br>&#125;<br><span class="hljs-keyword">if</span>(i==<span class="hljs-number">7</span>)&#123;<br>ix = q.<span class="hljs-built_in">front</span>().xx-m2;<br>iy = q.<span class="hljs-built_in">front</span>().yy-m1;<br>&#125;<br><span class="hljs-keyword">if</span>(ix&lt;<span class="hljs-number">1</span> || ix&gt;n || iy&lt;<span class="hljs-number">1</span> || iy&gt;m)&#123;<br><span class="hljs-keyword">continue</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(a[ix][iy]==<span class="hljs-number">4</span>)&#123;<br><span class="hljs-type">int</span> st = q.<span class="hljs-built_in">front</span>().step+<span class="hljs-number">1</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,st);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(a[ix][iy]==<span class="hljs-number">1</span>)&#123;<br>a[ix][iy]=<span class="hljs-number">0</span>;<br>point f;<br>f.step = q.<span class="hljs-built_in">front</span>().step+<span class="hljs-number">1</span>;<br>f.xx = ix;<br>f.yy = iy;<br>q.<span class="hljs-built_in">push</span>(f);<br>&#125;<br>&#125;<br>q.<span class="hljs-built_in">pop</span>();<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;m1,&amp;m2);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;a[i][j]);<br><span class="hljs-keyword">if</span>(a[i][j] == <span class="hljs-number">3</span>)&#123;<br>x = i;<br>y = j;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-built_in">bfs</span>();<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125; <br></code></pre></td></tr></table></figure><p>本篇题解为王某的处女作，愿今后与全国信竞生<strong><em>一起努力，一起拼搏，一起收获</em></strong>。</p>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
      <category>bfs</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2023/02/12/test/"/>
    <url>/2023/02/12/test/</url>
    
    <content type="html"><![CDATA[<p>first day in hexo</p><img src="/2023/02/12/test/test.png" class="">]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/02/12/hello-world/"/>
    <url>/2023/02/12/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
